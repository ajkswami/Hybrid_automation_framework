{"name": "test_get_employee_detail", "status": "failed", "statusDetails": {"message": "AssertionError: Response schema does not match\nassert False\n +  where False = validate_json_schema({'message': 'User found', 'user': {'company': 'Uturn', 'designation': 'HR Recruit', 'email': 'manisha@yahoo.com', 'first_name': 'Manisha', ...}}, {'properties': {'message': {'type': 'string'}, 'user': {'properties': {'company': {'type': 'string'}, 'designation': {'type': 'string'}, 'email': {'format': 'email', 'type': 'string'}, 'first_name': {'type': 'string'}, ...}, 'required': ['user_id', 'first_name', 'last_name', 'email', 'company', 'phone', ...], 'type': 'object'}}, 'required': ['message', 'user'], 'type': 'object'})", "trace": "def test_get_employee_detail():\n        response = get_employee()\n    \n        assert response.status_code == 200, (f\"Expected is 200, \"\n                                             f\"Actual is {response.status_code}\")\n    \n    \n        # Assertion for JSON Content Type\n        #assert response.headers['Content-Type'] == 'application/json', \\\n            #\"Response is not in JSON format\"\n    \n        # Assertion for Response Schema\n        expected_schema = {\n            \"type\": \"object\",\n            \"properties\": {\n                \"message\": {\"type\": \"string\"},\n                \"user\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"user_id\": {\"type\": \"integer\"},\n                        \"first_name\": {\"type\": \"string\"},\n                        \"last_name\": {\"type\": \"string\"},\n                        \"email\": {\"type\": \"string\", \"format\": \"email\"},\n                        \"company\": {\"type\": \"string\"},\n                        \"phone\": {\"type\": \"integer\"},\n                        \"salary\": {\"type\": \"integer\"},\n                        \"designation\": {\"type\": \"string\"},\n                        \"location\": {\"type\": \"string\"},\n                        \"isActive\": {\"type\": \"boolean\"},\n                        \"isDelete\": {\"type\": \"boolean\"},\n                        \"isIncrement\": {\"type\": \"boolean\"},\n                        \"user_created_at\": {\"type\": \"string\", \"format\": \"date-time\"},\n                        \"user_updated_at\": {\"type\": \"string\", \"format\": \"date-time\"},\n                    },\n                    \"required\": [\"user_id\", \"first_name\", \"last_name\", \"email\", \"company\", \"phone\", \"salary\",\n                                 \"designation\", \"location\",\n                                 \"isActive\", \"isDelete\", \"isIncrement\", \"user_created_at\", \"user_updated_at\"]\n                }\n            },\n            \"required\": [\"message\", \"user\"]\n        }\n    \n        response_json = response.json()\n>       assert validate_json_schema(response_json, expected_schema), \"Response schema does not match\"\nE       AssertionError: Response schema does not match\nE       assert False\nE        +  where False = validate_json_schema({'message': 'User found', 'user': {'company': 'Uturn', 'designation': 'HR Recruit', 'email': 'manisha@yahoo.com', 'first_name': 'Manisha', ...}}, {'properties': {'message': {'type': 'string'}, 'user': {'properties': {'company': {'type': 'string'}, 'designation': {'type': 'string'}, 'email': {'format': 'email', 'type': 'string'}, 'first_name': {'type': 'string'}, ...}, 'required': ['user_id', 'first_name', 'last_name', 'email', 'company', 'phone', ...], 'type': 'object'}}, 'required': ['message', 'user'], 'type': 'object'})\n\ntest_Employee_creation.py:51: AssertionError"}, "attachments": [{"name": "stdout", "source": "52c18f00-60be-4855-b29b-9d13977b8688-attachment.txt", "type": "text/plain"}], "start": 1702583427649, "stop": 1702583427662, "uuid": "bf381ad4-415b-4bc1-94be-a768adf18b29", "historyId": "35d25d725f659aecaf7416c00169ec85", "testCaseId": "35d25d725f659aecaf7416c00169ec85", "fullName": "test_Employee_creation#test_get_employee_detail", "labels": [{"name": "suite", "value": "test_Employee_creation"}, {"name": "host", "value": "DESKTOP-88G0BTK"}, {"name": "thread", "value": "13668-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Employee_creation"}]}